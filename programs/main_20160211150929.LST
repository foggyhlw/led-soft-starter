C51 COMPILER V9.50a   MAIN                                                                 12/01/2014 14:58:35 PAGE 1   


C51 COMPILER V9.50a, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: E:\Keil4(for stc 51)\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include "stc12c5608ad.h"
   2          typedef unsigned char BYTE;
   3          typedef unsigned int  WORD; 
   4          
   5          WORD delay_counter=0;
   6          BYTE direction=0;
   7          
   8          void Init_GlobalVariables();
   9          void Init_PCA();
  10          void Init_Timer0();
  11          void delay();
  12          void Init_ADC();
  13          void Init_UART();
  14          void UARTInterrupt();
  15          void Init_GPIO();
  16          void debounce();
  17          
  18          void main()
  19          {
  20   1        Init_UART();
  21   1        Init_PCA();
  22   1        Init_Timer0();
  23   1        Init_GPIO();
  24   1        while(1)
  25   1        {
  26   2          if(P32==0)
  27   2          {
  28   3            debounce();
  29   3            direction = 0;
  30   3          }
  31   2          if(P32==1)
  32   2          {
  33   3            debounce();
  34   3            direction = 1;
  35   3          }
  36   2        }
  37   1      }
  38          
  39          void debounce()    //20ms delay
  40          {
  41   1        unsigned char i, j, k;
  42   1        i = 2;
  43   1        j = 103;
  44   1        k = 147;
  45   1        do
  46   1        {
  47   2          do
  48   2          {
  49   3            while (--k);
  50   3          } while (--j);
  51   2        } while (--i);
  52   1      }
  53          
  54          void Init_GlobalVariables()
  55          {
C51 COMPILER V9.50a   MAIN                                                                 12/01/2014 14:58:35 PAGE 2   

  56   1      }
  57          
  58          void Init_GPIO()
  59          {
  60   1        P3M0 = 0x02;
  61   1        P3M1 = 0x00;   //P32设定为输入
  62   1        P0M0 = 0x01;
  63   1        P0M1 = 0x00;   //P01 input
  64   1      }
  65          
  66          void Init_PCA()
  67          {
  68   1        CMOD=0x04;   //timer0 overflow
  69   1        CCON=0x00;
  70   1        CCAPM0=0x42;
  71   1        CCAPM1=0x42;
  72   1        CCAPM2=0x42;
  73   1        CCAPM3=0x42;
  74   1        CL=CH=0;
  75   1        CCAP0L=CCAP0H=0;
  76   1        CCAP1L=CCAP1H=0;
  77   1        CCAP2L=CCAP2H=0;
  78   1        CCAP3L=CCAP3H=0;
  79   1        CCAP0H=0x90;
  80   1        CCAP1H=0x90;
  81   1        CCAP2H=0x90;
  82   1        CCAP3H=0x90;
  83   1        CR=1;
  84   1      }
  85          
  86          void Init_UART()
  87          {
  88   1        AUXR = AUXR | 0x40;
  89   1        TMOD |= 0x20;
  90   1        SCON = 0x50;
  91   1        TH1 = 0x88;
  92   1        TL1 = TH1;
  93   1        PCON = 0x80;
  94   1        EA = 1;
  95   1        ES = 1;
  96   1        TR1 = 1;
  97   1      }
  98            
  99          void Init_Timer0()
 100          {
 101   1         // AUXR = AUXR|0x80;
 102   1        TMOD |= 0x01;
 103   1        TH0 = 0xFF;
 104   1        TL0 = 0xDE;
 105   1        EA = 1;
 106   1        ET0 = 1;
 107   1        TR0 = 1;
 108   1      }
 109          
 110          void Timer0Interrupt(void) interrupt 1
 111          {
 112   1        delay_counter++;
 113   1        if(delay_counter>500 && direction == 1)
 114   1        {
 115   2          delay_counter=0;
 116   2          if(CCAP1H<0xff)
 117   2          {
C51 COMPILER V9.50a   MAIN                                                                 12/01/2014 14:58:35 PAGE 3   

 118   3          //  CCAP0H+=0x01;
 119   3            CCAP1H+=0x01;
 120   3            CCAP2H+=0x01;
 121   3            //CCAP3H+=0x01;
 122   3          }
 123   2          if(CCAP1H>0x40 && CCAP3H<0xff)
 124   2          {
 125   3            CCAP3H+=1;
 126   3          }
 127   2          if(CCAP3H>0x40 && CCAP0H<0xff)
 128   2          {
 129   3            CCAP0H+=1;
 130   3          }
 131   2        }
 132   1        
 133   1          if(delay_counter>500 && direction == 0)
 134   1        {
 135   2          delay_counter=0;
 136   2          if(CCAP1H >= 0x01 && CCAP1H<0x23)
 137   2          {
 138   3            CCAP1H-=1;
 139   3          }
 140   2          if(CCAP1H >= 0x23)
 141   2          {
 142   3            CCAP1H-=3;
 143   3          }
 144   2          if(CCAP0H >= 0x01 && CCAP0H<0x23)
 145   2          {
 146   3            CCAP0H-=1;
 147   3          }
 148   2          if(CCAP0H >= 0x23)
 149   2          {
 150   3            CCAP0H-=3;
 151   3          }
 152   2          if(CCAP2H >= 0x01 && CCAP2H<0x23)
 153   2          {
 154   3            CCAP2H-=1;
 155   3          }
 156   2          if(CCAP2H >= 0x23)
 157   2          {
 158   3            CCAP2H-=3;
 159   3          }
 160   2          if(CCAP3H >= 0x01 && CCAP3H<0x23)
 161   2          {
 162   3            CCAP3H-=1;
 163   3          }
 164   2          if(CCAP3H >= 0x23)
 165   2          {
 166   3            CCAP3H-=3;
 167   3          } 
 168   2        }
 169   1        TH0 = 0x0FF;
 170   1        TL0 = 0x0DE;
 171   1      }
 172          
 173          void UARTInterrupt(void) interrupt 4
 174          {
 175   1        BYTE temp;
 176   1        if(RI)
 177   1        {
 178   2          RI=0;
 179   2          temp=SBUF;
C51 COMPILER V9.50a   MAIN                                                                 12/01/2014 14:58:35 PAGE 4   

 180   2        /*  if(temp>=0x00 && temp<=0xff)
 181   2          {
 182   2            CCAP0H=temp;
 183   2            CCAP1H=temp;
 184   2            CCAP2H=temp;
 185   2            CCAP3H=temp;
 186   2          }
 187   2          */
 188   2          if(temp==0x00)
 189   2            direction=0;
 190   2          else
 191   2            direction=1;
 192   2        }
 193   1        else
 194   1          TI=0;
 195   1            
 196   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    401    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
